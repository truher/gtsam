# Nightly build for Raspberry Pi
# Uploads to test.pypi.org.

name: ARM Nightly

on: [workflow_dispatch]

env:
  IMG: raspios_lite_arm64:latest
  BIND: true
  CPU: cortex-a76

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     python_version: ['3.9', '3.10', '3.11', '3.12']


    env:
      # quote the number because yaml thinks 3.10 and 3.1 are the same, like it's a number, man.
      # https://yaml.org/spec/1.2.2/ the yaml spec is 50 pages
      PYTHON_VERSION: '3.11'
      # PYTHON_VERSION: ${{matrix.python_version}}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run on ARM
        uses: pguyot/arm-runner-action@v2
        with:
          base_image: $IMG
          bind_mount_repository: $BIND
          cpu: $CPU
          debug: false
          image_additional_mb: 20000
          commands: |
            cat /proc/cpuinfo
            sudo apt-get -y update
            sudo apt-get -y install python3 cmake build-essential pkg-config python3-numpy
            sudo apt-get -y install libboost-all-dev ninja-build 
            sudo apt-get -y install g++
            echo "CC=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
            echo "CXX=aarch64-linux-gnu-g++" >> $GITHUB_ENV
            bash .github/scripts/python.sh -d
            python3 -m pip install -r python/dev_requirements.txt
            echo "NIGHTLY=1" >> $GITHUB_ENV
            bash .github/scripts/python.sh -b
            bash .github/scripts/python.sh -t
            python3 -m pip install --upgrade pip auditwheel
            python3 -m pip wheel build/python -w build/python/dist
            ldd --version
            python3 -m auditwheel repair --plat manylinux_2_35_aarch64 -w build/python/repaired/ build/python/dist/truher_gtsam_nightly*


      # - name: Upload Artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     # TODO: define the name as ENV, use it in CMakeLists.txt 
      #     name: artifact311
      #     # name: artifact${{matrix.python_version}}
      #     path: build/python/repaired/truher_gtsam_nightly*
      

  # upload_all:
  #   # Waits for all the builds to finish
  #   # Downloads all their wheels
  #   # Uploads them all at once.
  #   name: Upload All
  #   needs: build
  #   runs-on: ubuntu-latest
  #   permissions:
  #     id-token: write
  #   steps:
  #     - name: Download Artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         path: dist/
  #         merge-multiple: true

  #     - name: Publish
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         packages-dir: dist/
  #         repository-url: https://test.pypi.org/legacy/